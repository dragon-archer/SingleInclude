cmake_minimum_required(VERSION 3.16)
project(singleinclude VERSION 1.1 LANGUAGES CXX)

list(FIND CMAKE_CXX_COMPILE_FEATURES cxx_std_17 HAS_CXX17)
list(FIND CMAKE_CXX_COMPILE_FEATURES cxx_std_20 HAS_CXX20)
if(HAS_CXX20)
	set(CMAKE_CXX_STANDARD 20)
elseif(HAS_CXX17)
	set(CMAKE_CXX_STANDARD 17)
else()
	message(FATAL_ERROR "SingleInclude requires at least C++17 support")
endif()
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(SRC main.cpp)
add_executable(singleinclude ${SRC})
if(DEFINED WITH_FMTLIB)
	message(STATUS "Use user defined fmtlib")
	target_include_directories(singleinclude PRIVATE ${WITH_FMTLIB})
endif()

if(CMAKE_BUILD_TYPE AND (${CMAKE_BUILD_TYPE} STREQUAL "Release"))
	if(MSVC)
		set_property(TARGET singleinclude PROPERTY MSVC_RUNTIME_LIBRARY "MultiThreaded")
	else()
		set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -s -static -static-libgcc -static-libstdc++")
	endif()
endif()

